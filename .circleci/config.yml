defaults: &defaults
  working_directory: ~/app/
  docker:
    - image: circleci/node:10.16.3

version: 2.1
orbs:
  node: circleci/node@1.0.1
  gke: circleci/gcp-gke@1.0.3
  gcr: circleci/gcp-gcr@0.6.1
jobs:
  build-and-test:
    <<: *defaults
    steps:
      - checkout
      - restore_cache:
          key: node_modules-{{ checksum "package.json" }}
      - run:
          name: Setup common environment variables
          command: |
            echo 'export APP_ENV="staging"' >> $BASH_ENV
            echo 'export SWIAM_API="https://localhost:4000"' >> $BASH_ENV
            echo 'export SWIAM_API_V2="https://localhost:4000"' >> $BASH_ENV
            echo 'export SWIAM_API_V3I="https://localhost:4000"' >> $BASH_ENV
            echo 'export SWIAM_API_V3="https://localhost:4000"' >> $BASH_ENV
            echo 'export SWIAM_OPENAPI="https://localhost:4000"' >> $BASH_ENV
            echo 'export BASE_GQL_URL="http://localhost"'>> $BASH_ENV
            echo 'export UNIVERSAL_API="http://localhost"'>> $BASH_ENV
            echo 'export UNIVERSAL_USER_EMAIL="test@test.com"'>> $BASH_ENV
            echo 'export SWIAM_UNIVERSAL_API_KEY="abcd"'>> $BASH_ENV
            echo 'export PORT="5000"' >> $BASH_ENV
            echo 'export SWIAM_SHOP_API_KEY=$SWIAM_SHOP_API_KEY' >> $BASH_ENV
      - run: NODE_ENV=development yarn
      - run:
          name: Tests
          command: yarn test --maxWorkers 2
      - save_cache:
          key: node_modules-{{ checksum "package.json" }}
          paths:
            - ~/app/node_modules/
  staging-build-push-image-docker:
    description: Build and push staging image to Google Container Registry
    machine: true
    steps:
      - checkout
      - gcr/gcr-auth
      - gcr/build-image:
          extra_build_args: "--build-arg SWIAM_API='https://apidev2.sportswhereiam.com/swiam-api'
             --build-arg SWIAM_API_V2='https://apidev2.sportswhereiam.com/swiam-api/v2'
             --build-arg SWIAM_API_V3I='https://apidev2.sportswhereiam.com/swiam-api/v3i'
             --build-arg SWIAM_API_V3='https://apidev2.sportswhereiam.com/swiam-api/v3'
            --build-arg SWIAM_OPENAPI='https://apidev2.sportswhereiam.com/openapi'
            --build-arg SWIAM_SHOP_API_KEY=$SWIAM_SHOP_API_KEY
            --build-arg BASE_GQL_URL='http://localhost'
            --build-arg UNIVERSAL_API='https://www.universal-tutorial.com/api'
            --build-arg UNIVERSAL_USER_EMAIL=$UNIVERSAL_USER_EMAIL
            --build-arg SWIAM_UNIVERSAL_API_KEY=$SWIAM_UNIVERSAL_API_KEY"
          image: staging-swiam-gql
          tag: $CIRCLE_SHA1 #Change version number e.g to 'v3' when updating application
      - gcr/push-image:
          image: staging-swiam-gql
          tag: $CIRCLE_SHA1 #Change version number e.g to 'v3' when updating application

  production-build-push-image-docker:
    description: Build and push staging image to Google Container Registry
    machine: true
    steps:
      - checkout
      - gcr/gcr-auth
      - gcr/build-image:
          extra_build_args: "--build-arg SWIAM_API='https://api.sportswhereiam.com/swiam-api'
               --build-arg SWIAM_API_V2='https://api.sportswhereiam.com/swiam-api/v2'
               --build-arg SWIAM_API_V3I='https://api.sportswhereiam.com/swiam-api/v3i'
               --build-arg SWIAM_API_V3='https://api.sportswhereiam.com/swiam-api/v3'
              --build-arg SWIAM_OPENAPI='https://api.sportswhereiam.com/openapi'
              --build-arg SWIAM_SHOP_API_KEY=$SWIAM_SHOP_API_KEY
              --build-arg BASE_GQL_URL='http://localhost'
              --build-arg UNIVERSAL_API='https://www.universal-tutorial.com/api'
              --build-arg UNIVERSAL_USER_EMAIL=$UNIVERSAL_USER_EMAIL
              --build-arg SWIAM_UNIVERSAL_API_KEY=$SWIAM_UNIVERSAL_API_KEY"
          image: swiam-gql
          tag: $CIRCLE_SHA1 #Change version number e.g to 'v3' when updating application
      - gcr/push-image:
          image: swiam-gql
          tag: $CIRCLE_SHA1 #Change version number e.g to 'v3' when updating application

  staging-deploy:
    description: Deploy Staging application to Google Kubernetes Engine
    machine: true
    steps:
      - gke/install
      - gke/update-kubeconfig-with-credentials:
          cluster: staging-swiam-cluster
          google-compute-zone: STAGING_GOOGLE_COMPUTE_ZONE
          perform-login: true
      - gke/rollout-image:
          cluster: staging-swiam-cluster
          deployment: staging-swiam-gql
          container: staging-swiam-gql
          image: gcr.io/swiam-220407/staging-swiam-gql # change version when updating
          tag: $CIRCLE_SHA1

  production-deploy:
    description: Deploy Production application to Google Kubernetes Engine
    machine: true
    steps:
      - gke/install
      - gke/update-kubeconfig-with-credentials:
          cluster: swiam-cluster
          google-compute-zone: GOOGLE_COMPUTE_ZONE
          perform-login: true
      - gke/rollout-image:
          cluster: swiam-cluster
          deployment: swiam-gql
          container: swiam-gql
          image: gcr.io/swiam-220407/swiam-gql # change version when updating
          tag: $CIRCLE_SHA1

workflows:
  build_update_deploy:
    jobs:
      - build-and-test
      - staging-build-push-image-docker:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - staging
      - staging-deploy:
          requires:
            - staging-build-push-image-docker
      - production-build-push-image-docker:
          requires:
            - build-and-test
          filters:
            branches:
              only:
                - master
      - production-deploy:
          requires:
            - production-build-push-image-docker
